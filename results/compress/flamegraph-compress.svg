<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>_ZN14typeArrayKlass15allocate_commonEibP6Thread (2,702,955,663 samples, 0.04%)</title><rect x="1189.4" y="405" width="0.5" height="15.0" fill="rgb(243,104,12)" rx="2" ry="2" />
<text  x="1192.40" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,376,215,793 samples, 0.02%)</title><rect x="1112.4" y="389" width="0.3" height="15.0" fill="rgb(207,104,51)" rx="2" ry="2" />
<text  x="1115.39" y="399.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(227,65,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_ZN13SharedRuntime19reresolve_call_siteEP10JavaThreadP6Thread (1,271,866,622 samples, 0.02%)</title><rect x="1112.0" y="405" width="0.2" height="15.0" fill="rgb(239,205,52)" rx="2" ry="2" />
<text  x="1115.00" y="415.5" ></text>
</g>
<g >
<title>_ZN13SharedRuntime19handle_wrong_methodEP10JavaThread (1,330,671,140 samples, 0.02%)</title><rect x="1112.0" y="421" width="0.3" height="15.0" fill="rgb(212,118,51)" rx="2" ry="2" />
<text  x="1115.00" y="431.5" ></text>
</g>
<g >
<title>[perf-47701.map] (99,549,123,782 samples, 1.61%)</title><rect x="1170.4" y="421" width="19.0" height="15.0" fill="rgb(238,57,18)" rx="2" ry="2" />
<text  x="1173.35" y="431.5" ></text>
</g>
<g >
<title>[unknown] (404,188,535,742 samples, 6.54%)</title><rect x="1112.8" y="453" width="77.2" height="15.0" fill="rgb(215,197,46)" rx="2" ry="2" />
<text  x="1115.76" y="463.5" >[unknown]</text>
</g>
<g >
<title>[perf-47701.map] (1,277,851,337 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(246,75,14)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,209,906,561 samples, 1.09%)</title><rect x="10.4" y="181" width="12.8" height="15.0" fill="rgb(221,8,35)" rx="2" ry="2" />
<text  x="13.37" y="191.5" ></text>
</g>
<g >
<title>_ZN9StealTask5do_itEP13GCTaskManagerj (1,274,563,189 samples, 0.02%)</title><rect x="23.5" y="405" width="0.2" height="15.0" fill="rgb(239,109,15)" rx="2" ry="2" />
<text  x="26.45" y="415.5" ></text>
</g>
<g >
<title>[perf-47701.map] (6,759,114,815 samples, 0.11%)</title><rect x="1111.0" y="437" width="1.3" height="15.0" fill="rgb(215,78,42)" rx="2" ry="2" />
<text  x="1113.98" y="447.5" ></text>
</g>
<g >
<title>[perf-47701.map] (998,510,232 samples, 0.02%)</title><rect x="10.0" y="117" width="0.2" height="15.0" fill="rgb(253,137,37)" rx="2" ry="2" />
<text  x="13.02" y="127.5" ></text>
</g>
<g >
<title>_ZN12GCTaskThread3runEv (2,529,100,957 samples, 0.04%)</title><rect x="23.2" y="421" width="0.5" height="15.0" fill="rgb(248,206,7)" rx="2" ry="2" />
<text  x="26.22" y="431.5" ></text>
</g>
<g >
<title>update_process_times (772,088,465 samples, 0.01%)</title><rect x="1112.5" y="341" width="0.1" height="15.0" fill="rgb(233,43,6)" rx="2" ry="2" />
<text  x="1115.48" y="351.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls12call_virtualEP9JavaValue11KlassHandleP6SymbolS4_P17JavaCallArgumentsP6Thread (67,742,021,150 samples, 1.10%)</title><rect x="10.3" y="357" width="12.9" height="15.0" fill="rgb(228,156,49)" rx="2" ry="2" />
<text  x="13.27" y="367.5" ></text>
</g>
<g >
<title>[perf-47701.map] (602,579,472 samples, 0.01%)</title><rect x="10.1" y="53" width="0.1" height="15.0" fill="rgb(212,29,34)" rx="2" ry="2" />
<text  x="13.08" y="63.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(240,229,5)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>_ZL17jni_invoke_staticP7JNIEnv_P9JavaValueP8_jobject11JNICallTypeP10_jmethodIDP18JNI_ArgumentPusherP6Thread (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="405" width="0.3" height="15.0" fill="rgb(216,1,30)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,340,312,816 samples, 0.02%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(214,194,48)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (2,143,131,805 samples, 0.03%)</title><rect x="1112.3" y="437" width="0.4" height="15.0" fill="rgb(245,9,1)" rx="2" ry="2" />
<text  x="1115.32" y="447.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,740,481,755 samples, 1.10%)</title><rect x="10.3" y="277" width="12.9" height="15.0" fill="rgb(233,167,5)" rx="2" ry="2" />
<text  x="13.27" y="287.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,385,100,521 samples, 0.02%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(234,95,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(234,71,25)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>_ZN13SharedRuntime18find_callee_methodEP10JavaThreadP6Thread (1,099,885,020 samples, 0.02%)</title><rect x="1112.0" y="389" width="0.2" height="15.0" fill="rgb(213,76,11)" rx="2" ry="2" />
<text  x="1115.00" y="399.5" ></text>
</g>
<g >
<title>Java_java_util_zip_CRC32_updateBytes (27,252,929,844 samples, 0.44%)</title><rect x="10.4" y="165" width="5.2" height="15.0" fill="rgb(227,97,18)" rx="2" ry="2" />
<text  x="13.44" y="175.5" ></text>
</g>
<g >
<title>all (6,176,709,632,426 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(226,176,23)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,736,770,879 samples, 1.10%)</title><rect x="10.3" y="261" width="12.9" height="15.0" fill="rgb(254,2,39)" rx="2" ry="2" />
<text  x="13.27" y="271.5" ></text>
</g>
<g >
<title>_ZN18InterpreterRuntime8newarrayEP10JavaThread9BasicTypei (808,509,485 samples, 0.01%)</title><rect x="23.0" y="133" width="0.2" height="15.0" fill="rgb(211,90,11)" rx="2" ry="2" />
<text  x="26.03" y="143.5" ></text>
</g>
<g >
<title>crc32 (35,579,217,164 samples, 0.58%)</title><rect x="16.2" y="117" width="6.7" height="15.0" fill="rgb(235,145,34)" rx="2" ry="2" />
<text  x="19.15" y="127.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls4callEP9JavaValue12methodHandleP17JavaCallArgumentsP6Thread (67,742,021,150 samples, 1.10%)</title><rect x="10.3" y="341" width="12.9" height="15.0" fill="rgb(253,22,6)" rx="2" ry="2" />
<text  x="13.27" y="351.5" ></text>
</g>
<g >
<title>[perf-47701.map] (934,452,229 samples, 0.02%)</title><rect x="10.0" y="101" width="0.2" height="15.0" fill="rgb(254,11,9)" rx="2" ry="2" />
<text  x="13.03" y="111.5" ></text>
</g>
<g >
<title>SpinPause (620,848,532 samples, 0.01%)</title><rect x="23.5" y="389" width="0.1" height="15.0" fill="rgb(225,219,37)" rx="2" ry="2" />
<text  x="26.45" y="399.5" ></text>
</g>
<g >
<title>[perf-47701.map] (403,958,647,036 samples, 6.54%)</title><rect x="1112.8" y="437" width="77.2" height="15.0" fill="rgb(246,81,12)" rx="2" ry="2" />
<text  x="1115.79" y="447.5" >[perf-47..</text>
</g>
<g >
<title>[perf-47701.map] (1,036,301,201 samples, 0.02%)</title><rect x="10.0" y="133" width="0.2" height="15.0" fill="rgb(227,25,35)" rx="2" ry="2" />
<text  x="13.02" y="143.5" ></text>
</g>
<g >
<title>[perf-47701.map] (5,700,687,543,389 samples, 92.29%)</title><rect x="23.7" y="453" width="1089.1" height="15.0" fill="rgb(210,6,24)" rx="2" ry="2" />
<text  x="26.70" y="463.5" >[perf-47701.map]</text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (1,804,687,828 samples, 0.03%)</title><rect x="1112.4" y="421" width="0.3" height="15.0" fill="rgb(251,125,44)" rx="2" ry="2" />
<text  x="1115.39" y="431.5" ></text>
</g>
<g >
<title>Java_java_util_zip_CRC32_updateBytes (99,241,441,222 samples, 1.61%)</title><rect x="1170.4" y="405" width="19.0" height="15.0" fill="rgb(244,32,25)" rx="2" ry="2" />
<text  x="1173.39" y="415.5" ></text>
</g>
<g >
<title>_ZN9OopMapSet19update_register_mapEPK5frameP11RegisterMap (657,043,417 samples, 0.01%)</title><rect x="1112.1" y="325" width="0.1" height="15.0" fill="rgb(240,168,50)" rx="2" ry="2" />
<text  x="1115.07" y="335.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,378,773,250 samples, 0.02%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(232,23,23)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls4callEP9JavaValue12methodHandleP17JavaCallArgumentsP6Thread (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="389" width="0.3" height="15.0" fill="rgb(251,181,46)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,677,343,287 samples, 1.10%)</title><rect x="10.3" y="229" width="12.9" height="15.0" fill="rgb(210,201,18)" rx="2" ry="2" />
<text  x="13.29" y="239.5" ></text>
</g>
<g >
<title>_ZN19OldToYoungRootsTask5do_itEP13GCTaskManagerj (593,948,439 samples, 0.01%)</title><rect x="23.3" y="405" width="0.1" height="15.0" fill="rgb(232,155,47)" rx="2" ry="2" />
<text  x="26.27" y="415.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,639,749,270 samples, 1.10%)</title><rect x="10.3" y="213" width="12.9" height="15.0" fill="rgb(222,207,6)" rx="2" ry="2" />
<text  x="13.29" y="223.5" ></text>
</g>
<g >
<title>_ZNK5frame6senderEP11RegisterMap (778,895,348 samples, 0.01%)</title><rect x="1112.1" y="357" width="0.1" height="15.0" fill="rgb(226,102,2)" rx="2" ry="2" />
<text  x="1115.06" y="367.5" ></text>
</g>
<g >
<title>__sysvec_hyperv_stimer0 (1,548,463,954 samples, 0.03%)</title><rect x="1112.4" y="405" width="0.3" height="15.0" fill="rgb(205,182,36)" rx="2" ry="2" />
<text  x="1115.39" y="415.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="357" width="0.3" height="15.0" fill="rgb(213,198,13)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (897,282,472 samples, 0.01%)</title><rect x="1112.5" y="357" width="0.1" height="15.0" fill="rgb(234,93,22)" rx="2" ry="2" />
<text  x="1115.46" y="367.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls12call_virtualEP9JavaValue6Handle11KlassHandleP6SymbolS5_P6Thread (67,742,021,150 samples, 1.10%)</title><rect x="10.3" y="373" width="12.9" height="15.0" fill="rgb(214,91,45)" rx="2" ry="2" />
<text  x="13.27" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (71,712,106,177 samples, 1.16%)</title><rect x="10.0" y="453" width="13.7" height="15.0" fill="rgb(237,157,1)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls11call_helperEP9JavaValueP12methodHandleP17JavaCallArgumentsP6Thread (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="373" width="0.3" height="15.0" fill="rgb(235,77,12)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[perf-47701.map] (39,543,843,741 samples, 0.64%)</title><rect x="15.6" y="165" width="7.6" height="15.0" fill="rgb(218,171,20)" rx="2" ry="2" />
<text  x="18.65" y="175.5" ></text>
</g>
<g >
<title>_ZN10JavaThread17thread_main_innerEv (67,743,882,084 samples, 1.10%)</title><rect x="10.3" y="405" width="12.9" height="15.0" fill="rgb(229,52,35)" rx="2" ry="2" />
<text  x="13.27" y="415.5" ></text>
</g>
<g >
<title>JavaMain (1,417,971,316 samples, 0.02%)</title><rect x="10.0" y="437" width="0.3" height="15.0" fill="rgb(220,48,41)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>Java_java_util_zip_CRC32_updateBytes (35,619,566,447 samples, 0.58%)</title><rect x="16.1" y="133" width="6.9" height="15.0" fill="rgb(219,20,40)" rx="2" ry="2" />
<text  x="19.15" y="143.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,711,966,874 samples, 1.10%)</title><rect x="10.3" y="245" width="12.9" height="15.0" fill="rgb(208,191,16)" rx="2" ry="2" />
<text  x="13.28" y="255.5" ></text>
</g>
<g >
<title>crc32 (99,143,767,521 samples, 1.61%)</title><rect x="1170.4" y="389" width="18.9" height="15.0" fill="rgb(219,168,19)" rx="2" ry="2" />
<text  x="1173.40" y="399.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,096,077,842 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(215,151,5)" rx="2" ry="2" />
<text  x="13.01" y="159.5" ></text>
</g>
<g >
<title>[perf-47701.map] (670,395,320 samples, 0.01%)</title><rect x="10.1" y="69" width="0.1" height="15.0" fill="rgb(251,37,41)" rx="2" ry="2" />
<text  x="13.07" y="79.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,169,734,214 samples, 0.02%)</title><rect x="1112.4" y="373" width="0.2" height="15.0" fill="rgb(252,190,48)" rx="2" ry="2" />
<text  x="1115.40" y="383.5" ></text>
</g>
<g >
<title>[perf-47701.map] (37,191,724,577 samples, 0.60%)</title><rect x="16.1" y="149" width="7.1" height="15.0" fill="rgb(208,145,7)" rx="2" ry="2" />
<text  x="19.09" y="159.5" ></text>
</g>
<g >
<title>_ZL12thread_entryP10JavaThreadP6Thread (67,742,021,150 samples, 1.10%)</title><rect x="10.3" y="389" width="12.9" height="15.0" fill="rgb(243,194,49)" rx="2" ry="2" />
<text  x="13.27" y="399.5" ></text>
</g>
<g >
<title>_ZN14typeArrayKlass15allocate_commonEibP6Thread (781,006,365 samples, 0.01%)</title><rect x="23.0" y="117" width="0.2" height="15.0" fill="rgb(208,10,32)" rx="2" ry="2" />
<text  x="26.04" y="127.5" ></text>
</g>
<g >
<title>_ZNK5frame25sender_for_compiled_frameEP11RegisterMap (769,797,417 samples, 0.01%)</title><rect x="1112.1" y="341" width="0.1" height="15.0" fill="rgb(244,110,53)" rx="2" ry="2" />
<text  x="1115.06" y="351.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,740,751,028 samples, 1.10%)</title><rect x="10.3" y="293" width="12.9" height="15.0" fill="rgb(251,81,35)" rx="2" ry="2" />
<text  x="13.27" y="303.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,598,895,065 samples, 1.09%)</title><rect x="10.3" y="197" width="12.9" height="15.0" fill="rgb(239,0,50)" rx="2" ry="2" />
<text  x="13.30" y="207.5" ></text>
</g>
<g >
<title>_ZN13SharedRuntime23find_callee_info_helperEP10JavaThreadR12vframeStreamRN9Bytecodes4CodeER8CallInfoP6Thread (1,031,107,131 samples, 0.02%)</title><rect x="1112.0" y="373" width="0.2" height="15.0" fill="rgb(224,40,48)" rx="2" ry="2" />
<text  x="1115.01" y="383.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="341" width="0.3" height="15.0" fill="rgb(252,213,8)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[perf-47701.map] (848,219,312 samples, 0.01%)</title><rect x="10.0" y="85" width="0.2" height="15.0" fill="rgb(205,80,17)" rx="2" ry="2" />
<text  x="13.04" y="95.5" ></text>
</g>
<g >
<title>_ZN18CardTableExtension26scavenge_contents_parallelEP16ObjectStartArrayP12MutableSpaceP8HeapWordP18PSPromotionManagerjj (589,140,995 samples, 0.01%)</title><rect x="23.3" y="389" width="0.1" height="15.0" fill="rgb(209,25,8)" rx="2" ry="2" />
<text  x="26.27" y="399.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,174,594,080 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(244,165,39)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>_ZN10JavaThread3runEv (67,743,882,084 samples, 1.10%)</title><rect x="10.3" y="421" width="12.9" height="15.0" fill="rgb(222,159,44)" rx="2" ry="2" />
<text  x="13.27" y="431.5" ></text>
</g>
<g >
<title>_ZL10java_startP6Thread (70,273,216,231 samples, 1.14%)</title><rect x="10.3" y="437" width="13.4" height="15.0" fill="rgb(226,173,10)" rx="2" ry="2" />
<text  x="13.27" y="447.5" ></text>
</g>
<g >
<title>java (6,176,709,632,426 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(213,69,1)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java</text>
</g>
<g >
<title>jni_CallStaticVoidMethod (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="421" width="0.3" height="15.0" fill="rgb(240,118,54)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>_ZN9JavaCalls11call_helperEP9JavaValueP12methodHandleP17JavaCallArgumentsP6Thread (67,742,021,150 samples, 1.10%)</title><rect x="10.3" y="325" width="12.9" height="15.0" fill="rgb(230,129,19)" rx="2" ry="2" />
<text  x="13.27" y="335.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(220,225,15)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>_ZN11OptoRuntime11new_array_CEP12klassOopDesciP10JavaThread (2,843,953,393 samples, 0.05%)</title><rect x="1189.4" y="421" width="0.5" height="15.0" fill="rgb(230,211,50)" rx="2" ry="2" />
<text  x="1192.38" y="431.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,124,813,133 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(238,110,11)" rx="2" ry="2" />
<text  x="13.01" y="175.5" ></text>
</g>
<g >
<title>[perf-47701.map] (67,740,751,028 samples, 1.10%)</title><rect x="10.3" y="309" width="12.9" height="15.0" fill="rgb(219,115,29)" rx="2" ry="2" />
<text  x="13.27" y="319.5" ></text>
</g>
<g >
<title>crc32 (27,214,333,661 samples, 0.44%)</title><rect x="10.4" y="149" width="5.2" height="15.0" fill="rgb(239,28,48)" rx="2" ry="2" />
<text  x="13.44" y="159.5" ></text>
</g>
<g >
<title>[perf-47701.map] (1,416,000,273 samples, 0.02%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(231,61,3)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[perf-47701.map] (529,747,608 samples, 0.01%)</title><rect x="10.1" y="37" width="0.1" height="15.0" fill="rgb(238,179,2)" rx="2" ry="2" />
<text  x="13.09" y="47.5" ></text>
</g>
</g>
</svg>
